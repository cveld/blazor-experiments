@inject IModalService ModalService
@using BlazorServerSide.Models

@*
    Applying the following third party Blazor component libraries:
    * Chris Sainty's Bootstrap Modal component: https://github.com/Blazored/Modal
    * Vladimir Samoilenko's Material Design Blazor library: https://github.com/SamProf/MatBlazor
*@

<h3>You would like to book @vacation.Title</h3>


<EditForm Model="bookVacationFormModel" OnValidSubmit="SubmitForm">
    <DataAnnotationsValidator />
    @* The following control is a dummy control to prevent default selection of the first control
        in a Material Design modal dialog *@
    <MatTextField Style="height: 0" @bind-Value="PreventDefaultControl"></MatTextField>
    <div class="form-group">
        <MatDatePicker Class="col-md-6 col-sm-12" Label="Booking date" @bind-Value="bookVacationFormModel.BookingDate"></MatDatePicker>
        <ValidationMessage For="() => bookVacationFormModel.BookingDate" />
    </div>
    <div class="form-group">
        <MatTextField Class="col-sm-12" Label="E-mail address" @bind-Value="bookVacationFormModel.EmailAddress"></MatTextField>
        <ValidationMessage For="() => bookVacationFormModel.EmailAddress" />
    </div>
    <div class="form-group form-row">
        <div class="form-col-md-4">
            <MatSelect Label="Phone prefix" Enhanced="true" @bind-Value="bookVacationFormModel.PhoneNumberPrefix">
                @foreach (var prefix in PhoneNumberPrefixModel.PhoneNumberPrefixList())
                {
                    <MatOption Value="@prefix.ID">@prefix.Display</MatOption>
                }
            </MatSelect>
        </div>
        <div class="form-col-md-8">
            <MatTextField Label="Phone number" @bind-Value="bookVacationFormModel.PhoneNumber"></MatTextField>
        </div>
        <div class="form-col-md-12">
            <ValidationMessage For="() => bookVacationFormModel.PhoneNumberPrefix" />
            <ValidationMessage For="() => bookVacationFormModel.PhoneNumber" />
        </div>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Submit</button>
        <button @onclick="@Cancel" class="btn btn-secondary">Cancel</button>
    </div>
</EditForm>

@code {
    string PreventDefaultControl { get; set; }

    BookVacationFormModel bookVacationFormModel = new BookVacationFormModel
    {
        PhoneNumberPrefix = PhoneNumberPrefixModel.PREFIXNETHERLANDS
    };

    [CascadingParameter] ModalParameters Parameters { get; set; }
    VacationModel vacation;

    protected override void OnInitialized()
    {
        // Get VacationModel object from modal parameters:
        vacation = Parameters.Get<VacationModel>("vacation");
    }

    protected void SubmitForm()
    {
        var bookedEventModel = new BookedEventModel
        {
            VacationID = vacation.ID,
            BookVacationFormModel = bookVacationFormModel
        };
        ModalService.Close(ModalResult.Ok(bookedEventModel));
    }

    protected void Cancel(MouseEventArgs mouseEventArgs)
    {
        ModalService.Cancel();
    }
}
